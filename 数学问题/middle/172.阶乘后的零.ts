/*
 * @lc app=leetcode.cn id=172 lang=typescript
 *
 * [172] 阶乘后的零
 */

// @lc code=start
function trailingZeroes(n: number): number {
  // 0的情况只有 2* 5等于10，会有0
  // 所以可以统计2和5成对出现的个数
  // 但是2的数量肯定多余5，所以只需要统计5出现的次数
  // 例如20，里面有5,10,15,20,5个5的倍数，有4个5
  // 那么20的阶乘结果结尾有4个0,20/5个0
  // 但是每隔5个数会多一个5
  // 例如25 =5*5,实际上有2个5
  // 所以25的阶乘中0的个数 = 25/5 + 25/25 = 6个
  // 同理125中：125/5 = 125/25 + 125/125 = 31
  // 以此类推:阶乘结尾为0的个数为：n/5+n/25+n/125...
  let count = 0
  while (n >= 5) {
    // 里面有5的个数，相当于n/5
    count = count + Math.floor(n / 5)
    // 继续除以5，下次进来就是n/5*5，统计25出现的个数，以此类推
    n = Math.floor(n / 5)
  }

  return count
};
// @lc code=end

